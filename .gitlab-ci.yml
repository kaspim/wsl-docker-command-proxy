stages:
  - build
  - publish

build:release:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^release-/'
  tags:
    - docker
    - linux
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind
  before_script:
    - echo BUILD_JOB_ID=$CI_JOB_ID > build.env
  script:
    - echo "Running build job for $CI_COMMIT_TAG"
    - docker run --rm -v "$(pwd):/src/" "cdrx/pyinstaller-windows:python3" "pyinstaller --onefile docker-ubuntu.py --icon=assets/icon.ico
    # Without code sign
    - mv dist/docker-ubuntu.exe dist/docker.exe
    # With code sign
#   - echo "$CODE_SIGN" | base64 -d > codesign.pfx
#   - docker run --rm -v "$(pwd):/src/" "debian:bullseye-slim" /bin/bash -c "apt update && apt upgrade -y && apt install osslsigncode -y && osslsigncode sign -h sha256 -pkcs12 /src/codesign.pfx -pass PASSWORD -in /src/dist/docker-ubuntu.exe -out /src/dist/docker.exe"
#   - rm -f codesign.pfx
  artifacts:
    expire_in: 10 years
    paths:
      - dist/
    reports:
      dotenv: build.env

publish:release:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^release-/'
  needs:
    - job: build:release
      artifacts: true
  tags:
    - docker
    - linux
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Running publish job for $CI_COMMIT_TAG"
  release:
    name: "WSL Docker command proxy for Windows"
    description: "WSL Docker command proxy for Windows"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_SHA"
    assets:
      links:
        - name: "docker.exe (Ubuntu)"
          url: "${CI_PROJECT_URL}/-/jobs/${BUILD_JOB_ID}/artifacts/file/dist/docker.exe"
